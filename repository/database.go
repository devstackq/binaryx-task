package repository

import (
	"database/sql"

	_ "github.com/lib/pq"
)

func CreateDB() (*sql.DB, error) {
	configDb := "postgres://postgres:postgres@localhost:5432/binaryxdb?sslmode=disable"
	db, err := sql.Open("postgres", configDb)
	if err != nil {
		return nil, err
	}
	if err = db.Ping(); err != nil {
		return nil, err
	}

	currencies, err := db.Prepare(`CREATE TABLE IF NOT EXISTS currencies  (
		id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
		name varchar(255) NOT NULL
	)`)

	if err != nil {
		return nil, err
	}
	currencies.Exec()

	wallets, err := db.Prepare(`CREATE TABLE IF NOT EXISTS wallets  (
		id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
		uuid varchar(255) NOT NULL,
		balance integer,
		currencyId integer REFERENCES currencies(id)
	)`)

	if err != nil {
		return nil, err
	}
	wallets.Exec()

	users, err := db.Prepare(`CREATE TABLE IF NOT EXISTS users (
		id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
		firstname varchar(255) NOT NULL,
		lastname varchar(255) NOT NULL,
		email varchar(255) NOT NULL UNIQUE,
		password varchar(255) NOT NULL,
		uuid varchar(255) REFERENCES wallets(uuid)
	)`)
	if err != nil {
		return nil, err
	}
	users.Exec()

	return db, nil
}
